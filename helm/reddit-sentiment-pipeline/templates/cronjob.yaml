apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "reddit-sentiment-pipeline.fullname" . }}
  labels:
    {{- include "reddit-sentiment-pipeline.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.cronjob.schedule | quote }}
  concurrencyPolicy: {{ .Values.cronjob.concurrencyPolicy }}
  successfulJobsHistoryLimit: {{ .Values.cronjob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.cronjob.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "reddit-sentiment-pipeline.selectorLabels" . | nindent 12 }}
        spec:
          serviceAccountName: {{ include "reddit-sentiment-pipeline.serviceAccountName" . }}
          restartPolicy: {{ .Values.cronjob.restartPolicy }}
          containers:
          - name: {{ .Chart.Name }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            command:
              - python
              - -m
              - apps.collector.collector
            env:
            - name: REDDIT_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "reddit-sentiment-pipeline.fullname" . }}-secrets
                  key: reddit_client_id
            - name: REDDIT_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "reddit-sentiment-pipeline.fullname" . }}-secrets
                  key: reddit_client_secret
            resources:
              {{- toYaml .Values.job.resources | nindent 14 }}
            volumeMounts:
            - name: data-storage
              mountPath: /app/data
          volumes:
          - name: data-storage
            persistentVolumeClaim:
              claimName: {{ include "reddit-sentiment-pipeline.fullname" . }}-data
